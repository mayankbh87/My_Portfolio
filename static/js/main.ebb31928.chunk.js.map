{"version":3,"sources":["Components/Home.js","Components/Header.js","Components/Education.js","Components/Resume.js","Components/About.js","App.js","serviceWorker.js","index.js","Images/MyPic.jpg"],"names":["useStyles","makeStyles","theme","pic","height","spacing","width","margin","typed","color","detailContainer","position","top","left","transform","textAlign","zIndex","particlesCanva","Home","classes","Box","className","Grid","container","justify","Avatar","alt","src","MyImage","Typography","variant","strings","typeSpeed","backSpeed","loop","pageTitle","textDecoration","menuDrawer","background","listItem","Header","useState","openDrawer","setOpenDrawer","pageArray","icon","title","path","AssignmentInd","ContactMail","AppBar","Toolbar","item","sm","xs","Hidden","only","alignItems","style","marginTop","map","page","component","Link","to","IconButton","edge","onClick","menuButton","aria-label","SwipeableDrawer","paper","anchor","open","onClose","onOpen","List","key","ListItem","button","ListItemIcon","ListItemText","primary","Education","Resume","About","App","CssBaseline","exact","canvasClassName","params","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.ebb31928.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Box, Avatar, makeStyles, Typography, Grid } from '@material-ui/core';\r\nimport MyImage from '../Images/MyPic.jpg'\r\nimport Typed from 'react-typed';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pic: {\r\n    height: theme.spacing(30),\r\n    width: theme.spacing(30),\r\n    margin: theme.spacing(1),\r\n  },\r\n  typed: {\r\n    margin: theme.spacing(2),\r\n    color: \"#fff\"\r\n  },\r\n  detailContainer: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%,-50%)\",\r\n    textAlign: \"center\",\r\n    width: \"100vw\",\r\n    zIndex: 1\r\n  },\r\n  particlesCanva: {\r\n    position: \"absolute\"\r\n  }\r\n}))\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.detailContainer}>\r\n      \r\n      <Grid container justify=\"center\">\r\n        <Avatar className={classes.pic} alt=\"Mayank Bhardwaj\" src={MyImage} />\r\n      </Grid>\r\n\r\n      <Typography className={classes.typed} variant=\"h4\">\r\n        <Typed\r\n          strings={['Mayank Bhardwaj']}\r\n          typeSpeed={40}\r\n        // loop\r\n        />\r\n      </Typography>\r\n      <Typography className={classes.typed} variant=\"h5\">\r\n        <Typed\r\n          strings={[\r\n            'React Developer',\r\n            'Web Developer',\r\n            'MERN Developer']}\r\n          typeSpeed={40}\r\n          backSpeed={50}\r\n          loop >\r\n        </Typed>\r\n      </Typography>\r\n     \r\n\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Home, ContactMail, AssignmentInd} from '@material-ui/icons';\r\nimport { AppBar,Avatar, Box, Toolbar, Typography, IconButton, Grid, Hidden , SwipeableDrawer, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport { Link } from \"react-router-dom\";\r\nimport MyImage from '../Images/MyPic.jpg'\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageTitle: {\r\n       color: \"#fff\",\r\n       textDecoration: \"none\"\r\n    },\r\n    menuDrawer: {\r\n        // width: \"30%\",\r\n        background: \"linear-gradient(#6692F2,#1F285A)\"\r\n    },\r\n    pic: {\r\n        height: theme.spacing(12),\r\n        width: theme.spacing(12),\r\n        margin: theme.spacing(1),\r\n    },\r\n    listItem : {\r\n        color: \"#fff\"\r\n    }\r\n}))\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n\r\n    const [openDrawer,setOpenDrawer] = useState(false);\r\n\r\n    const pageArray = [\r\n        {\r\n            icon: <Home />,\r\n            title: \"Home\",\r\n            path: \"/My_PortFolio\"\r\n        },\r\n        {\r\n            icon: <MenuBookIcon />,\r\n            title: \"Education\",\r\n            path: \"/My_PortFolio/Education\"\r\n        },\r\n        {\r\n            icon: <AssignmentInd />,\r\n            title: \"Resume\",\r\n            path: \"/My_PortFolio/Resume\"\r\n        },\r\n        {\r\n            icon: <InfoIcon />,\r\n            title: \"About\",\r\n            path: \"/My_PortFolio/About\"\r\n        },\r\n        {\r\n            icon: <ContactMail />,\r\n            title: \"Contact\",\r\n            path: \"/My_PortFolio/Contact\"\r\n        }\r\n    ]\r\n\r\n    const pageList = (slider) => (\r\n        <Box>\r\n            {/* <Grid container justify=\"center\">\r\n            <Avatar className={classes.pic} alt=\"Mayank Bhardwaj\" src={MyImage} />\r\n            </Grid> */}\r\n            <List>\r\n                    {pageArray.map((page,key) => (\r\n                        <ListItem button onClick = {() => setOpenDrawer(false)} key = {key} component = {Link} to = {page.path}>\r\n                            <ListItemIcon className = {classes.listItem}>\r\n                                {page.icon}\r\n                            </ListItemIcon>\r\n                            <ListItemText className = {classes.listItem} primary = {page.title} />\r\n                        </ListItem>\r\n                    ))\r\n                }\r\n            </List>\r\n        </Box>\r\n        );\r\n\r\n    return (\r\n        <Box>\r\n            <AppBar  position=\"static\">\r\n                <Toolbar variant=\"dense\">\r\n                    {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton> */}\r\n                    <Grid container>\r\n                        <Grid item sm={6} xs = {2}>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                                Portfolio\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Hidden only={[\"sm\",\"xs\"]}>\r\n                        <Grid item sm = {6} xs = {10} alignItems=\"center\" >\r\n                            <Grid container style = {{marginTop: 4}}  justify=\"flex-end\" >\r\n                                {\r\n                                    pageArray.map(page => (\r\n                                        <Grid item sm = {2} xs = {2} >\r\n                                            <Typography component = {Link} to = {page.path} className={classes.pageTitle}>{page.title}</Typography>\r\n                                        </Grid>\r\n                                    ))\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n                        </Hidden> \r\n                        <Hidden only={[\"lg\",\"md\"]}>\r\n                        <Grid item sm = {6} xs = {10} alignItems=\"center\" >\r\n                            <Grid container justify=\"flex-end\" >\r\n                            <IconButton edge=\"start\" onClick = {() => setOpenDrawer(true)} className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                            <MenuIcon />\r\n                            </IconButton>\r\n                            </Grid>\r\n                        </Grid>\r\n                        \r\n                        </Hidden> \r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <SwipeableDrawer\r\n            classes={{\r\n                paper: classes.menuDrawer, // class name, e.g. `classes-nesting-root-x`\r\n              }}\r\n            anchor= \"right\"\r\n            open={openDrawer}\r\n            onClose={() => setOpenDrawer(false)}\r\n            onOpen={() => setOpenDrawer(false)}\r\n          >\r\n            {pageList(\"right\")}\r\n          </SwipeableDrawer>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Education = () => {\r\n    return (\r\n        <div>\r\n            education\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Education\r\n","import React from 'react'\r\n\r\nconst Resume = () => {\r\n    return (\r\n        <div>\r\n            resume\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Resume\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            about\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react';\nimport Home from './Components/Home';\nimport { CssBaseline,makeStyles } from '@material-ui/core';\nimport Header from './Components/Header';\nimport { BrowserRouter as Router,Route, Switch } from \"react-router-dom\";\nimport Education from './Components/Education';\nimport Resume from './Components/Resume';\nimport About from './Components/About';\nimport \"./App.css\";\nimport Particles from 'react-particles-js';\n\nconst useStyles = makeStyles(theme => ({\n\n  particlesCanva: {\n    position: \"fixed\"\n  }\n}))\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <Router>\n      <>\n      <CssBaseline />\n        <Header />\n        <Switch>\n          <Route exact path = \"/My_Portfolio\" component = {Home} />\n          <Route  path = \"/My_Portfolio/Education\" component = {Education} />\n          <Route  path = \"/My_Portfolio/Resume\" component = {Resume} />\n          <Route  path = \"/My_Portfolio/About\" component = {About} />\n          <Route  path = \"/My_Portfolio/Contact\" component = {Home} />\n        </Switch>\n        <Particles\n        canvasClassName = {classes.particlesCanva}\n          params={{\n            \"particles\": {\n              \"number\": {\n                \"value\": 50\n              },\n              \"size\": {\n                \"value\": 3\n              }\n            },\n            \"interactivity\": {\n              \"events\": {\n                \"onhover\": {\n                  \"enable\": true,\n                  \"mode\": \"repulse\"\n                }\n              }\n            }\n          }} />\n      </>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/MyPic.67dfccae.jpg\";"],"sourceRoot":""}